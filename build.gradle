buildscript {
    ext {
        springBootVersion = '2.1.2.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'groovy'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.modzo.iptv'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    implementation group: 'commons-io', name: 'commons-io', version: '2.6'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.8.1'
    implementation 'net.jodah:failsafe:1.1.1'
    implementation group: 'uk.co.caprica', name: 'vlcj', version: '3.12.1'
    implementation 'org.liquibase:liquibase-core'

    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'

    runtime 'org.postgresql:postgresql'

    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.6'

    testImplementation 'org.codehaus.groovy:groovy'
    testImplementation 'org.spockframework:spock-core:1.2-groovy-2.5'
    testImplementation 'org.spockframework:spock-spring:1.2-groovy-2.5'
    testImplementation 'org.testcontainers:testcontainers:1.8.3'
    testImplementation 'org.testcontainers:postgresql:1.8.3'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

bootRun {
    bootRun.systemProperty 'spring.profiles.active', 'dev'
}

task resolveGUIDependencies(type: Exec) {
    workingDir("$projectDir/frontend")
    commandLine 'npm', 'install'
    ignoreExitValue true
}

task buildGUI(type: Exec) {
    workingDir("$projectDir/frontend")
    commandLine 'npm', 'run', 'build'
    ignoreExitValue true
    dependsOn(tasks.resolveGUIDependencies)
}

task copyGUI(type: Copy) {
    from file("$projectDir/frontend/build/")
    into file("$buildDir/resources/main/gui")
    dependsOn(tasks.buildGUI)
}

tasks.build.dependsOn copyGUI
tasks.bootRun.dependsOn copyGUI